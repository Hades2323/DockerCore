services:
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    container_name: umami
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      - t3_proxy
      - socket_proxy
    ports:
      - "57124:3000"
    volumes:
      - $DOCKERDIR/appdata/umami/data:/var/lib/postgresql/data
      - $DOCKERDIR/appdata/umami/config:/app/config # Config directory
      - $DOCKERDIR/appdata/umami/logs:/app/logs # Logs directory
      - $DOCKERDIR/appdata/umami/uploads:/app/uploads # Uploads directory
    environment:
      DATABASE_URL: postgresql://umami:umami@db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: $UMAMI_APP_SECRET
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.umami-rtr.entrypoints=websecure"
      - "traefik.http.routers.umami-rtr.rule=Host(`umami.$DOMAINNAME_00`)"
      # Middlewares
      # - "traefik.http.routers.traefik-rtr.middlewares=chain-no-auth@file" # For No Authentication
      - "traefik.http.routers.umami-rtr.middlewares=chain-basic-auth@file" # For Basic HTTP Authentication
      # - "traefik.http.routers.traefik-rtr.middlewares=chain-no-auth-no-crowdsec@file"
      # - "traefik.http.routers.traefik-rtr.middlewares=chain-no-auth-webos@file"
      # - "traefik.http.routers.traefik-rtr.middlewares=chain-oauth-external@file"
      # - "traefik.http.routers.traefik-rtr.middlewares=chain-oauth@file" # For Google OAuth
      # - "traefik.http.routers.traefik-rtr.middlewares=chain-authelia@file" # For Authelia Authentication
      # HTTP Services
      - "traefik.http.routers.umami-rtr.service=umami-svc"
      - "traefik.http.services.umami-svc.loadbalancer.server.port=3000"